{"version":3,"file":"index.js","mappings":"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","sources":["webpack://js/external window [\"wp\",\"element\"]","webpack://js/webpack/bootstrap","webpack://js/webpack/runtime/compat get default export","webpack://js/webpack/runtime/define property getters","webpack://js/webpack/runtime/hasOwnProperty shorthand","webpack://js/webpack/runtime/make namespace object","webpack://js/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const{registerBlockType} = wp.blocks;\nconst{\n    RichText,\n    InspectorControls,\n    ColorPalette\n} = wp.editor;\nconst{ PanelBody } = wp.components;\n\nregisterBlockType('bnsgutengerg/testblock', {\n\ttitle: 'My Custom Block',\n\tdescription: 'A Blank new block',\n    icon: 'smiley',\n    category: 'text',\n    attributes: {\n        userinput: {type: \"string\"},\n        wpurl: {type: \"string\"},\n        clientid: {type: \"string\"},\n        clientsecret: {type: \"string\"},\n        apidata: {type: \"string\"}\n    },\n \n    edit: function(props) { \n\n        //props.setAttributes({apidata: \"loading\"});\n        \n        \n\n        async function componentGetApi(){\n            const url = \"http://localhost:9001/wp-json/ibl/api/interview\";\n            const response = await fetch(url);\n            const data = await response.json();\n            const greetingData = await data[0];\n\n            console.log(greetingData['greeting']);\n            props.setAttributes({apidata: greetingData['greeting']});\n            \n        }\n\n        //componentGetApi();\n\n        function updateUserinput(){\n            props.setAttributes({userinput: event.target.value})\n        }\n        function updatewpurl(){\n            props.setAttributes({wpurl: event.target.value})\n        }\n\n        function updateclientid(){\n            props.setAttributes({clientid: event.target.value})\n        }\n        function updateclientsecret(){\n            props.setAttributes({clientsecret: event.target.value})\n        }\n        \n\n        async function sendGreeting(){\n            const data = {\n                \"greeting\": props.attributes.userinput\n            };\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            }\n            const posturl = props.attributes.wpurl + props.attributes.userinput.replace(/\\s/g, '+') //replace spaces with +\n            \n            const response = await fetch(posturl, options);\n            console.log(response);\n        }\n\n\t\treturn ([\n            \n                <InspectorControls>\n                    <PanelBody>\n                        <p>Provide a URL:</p>\n                        <input type=\"text\" placeholder = \"Wordpress URL:\" value = {props.attributes.wpurl} onChange={updatewpurl}/>\n                    </PanelBody>\n                    <PanelBody>\n                        <p>Provide a Client ID:</p>\n                        <input type=\"text\" placeholder = \"Client ID\" value = {props.attributes.clientid} onChange={updateclientid}/>\n                    </PanelBody>\n                    <PanelBody>\n                        <p>Provide a Client Secret:</p>\n                        <input type=\"text\" placeholder = \"Client Secret\" value = {props.attributes.clientsecret} onChange={updateclientsecret}/>\n                    </PanelBody>\n                </InspectorControls>,\n\n                <div>\n                    <input type=\"text\" placeholder = \"UserInput\" value = {props.attributes.userinput} onChange={updateUserinput}/>\n                </div>,\n                <br/>,\n                <div>\n                    {/*<input type=\"text\" placeholder = \"Post onChange\" value = {props.attributes.apidata} onChange={sendGreeting}/>*/}\n                    <button type=\"button\" onClick={sendGreeting}>Post Greeting</button>\n                </div>\n            \n        ]);\n\t},\n\n    save(props) {\n\n            componentGetApi();\n\n            async function componentGetApi(){\n                const url = \"http://wptwo.localhost/wp-json/ibl/api/interview/\";\n                const response = await fetch(url);\n                const data = await response.json();\n                const greetingData = await data[0];\n    \n                console.log(greetingData['greeting']);\n                props.setAttributes({apidata: data.stringify});\n                \n            }\n        \n\n        \n\n        return(\n            <p>List of greetings in the DB: {props.attributes.apidata}</p>\n            \n        )\n    }\n});"],"names":["registerBlockType","wp","blocks","RichText","InspectorControls","ColorPalette","editor","PanelBody","components","title","description","icon","category","attributes","userinput","type","wpurl","clientid","clientsecret","apidata","edit","props","componentGetApi","url","response","fetch","data","json","greetingData","console","log","setAttributes","updateUserinput","event","target","value","updatewpurl","updateclientid","updateclientsecret","sendGreeting","options","method","headers","body","JSON","stringify","posturl","replace","save"],"sourceRoot":""}